name: Build Native

on:
  push:
    branches:
    - master

env:
  PROJECT_NAME: TheUtility

jobs:
  build:
    name: Build-native-plugins
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            build_dir: build-mac
            artifact_ext: mac
          - os: windows-latest
            build_dir: build-win
            artifact_ext: win

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Get VST3 SDK
      run: |
        cd iPlug2/Dependencies/IPlug
        ./download-iplug-sdks.sh
      shell: bash

    - name: Get Prebuilt Libs
      run: |
        cd iPlug2/Dependencies
        ./download-prebuilt-libs.sh
      shell: bash

    - name: Import Certificate (macOS)
      if: matrix.os == 'macOS-latest'
      uses: apple-actions/import-codesign-certs@v1
      with: 
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

    - name: Build macOS
      if: matrix.os == 'macOS-latest'
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APP_SPECIFIC_PWD: ${{ secrets.APP_SPECIFIC_PWD }}
        CERT_NAME_HASH: ${{ secrets.CERT_NAME_HASH }}
        TEAM_ID: ${{ secrets.TEAM_ID }}
      run: |
        cd ${{env.PROJECT_NAME}}/scripts
        sh ./makedist-mac.sh
      shell: bash

    - name: Add msbuild to PATH (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.1

    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: |
        cd ${{env.PROJECT_NAME}}\scripts
        .\makedist-win.bat
      shell: pwsh

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{env.PROJECT_NAME}}-${{matrix.artifact_ext}}
        path: ${{env.PROJECT_NAME}}/${{matrix.build_dir}}/out

  test:
    name: Test Native
    needs: build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            artifact_ext: mac
            PluginVal: ./pluginval.app/Contents/MacOS/pluginval --strictness-level 10 --block-sizes 44100,48000,88200,96000,176400,192000 --skip-gui-tests --validate-in-process --validate
            AuVal: auval -vt aufx ${{ secrets.MFR_ID }} # change mfg tag and plugin type accordingly
          - os: windows-latest
            artifact_ext: win
            PluginVal: .\pluginval.exe --strictness-level 10 --block-sizes 44100,48000,88200,96000,176400,192000 --skip-gui-tests --validate-in-process --validate
            
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{env.PROJECT_NAME}}-${{matrix.artifact_ext}}

      - name: Unzip files (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          ls
    # unzip *-${{matrix.artifact_ext}}.zip
        shell: bash

      - name: Pluginval and auval (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          curl -L "https://github.com/Tracktion/pluginval/releases/download/latest_release/pluginval_macOS.zip" -o pluginval.zip
          unzip pluginval
          ${{matrix.PluginVal}} Default/${{env.PROJECT_NAME}}.vst3 || exit 1
          ${{matrix.PluginVal}} Compatible/${{env.PROJECT_NAME}}.vst3 || exit 1
          mkdir -p ~/Library/Audio/Plug-Ins/Components
          mv Default/${{env.PROJECT_NAME}}.component ~/Library/Audio/Plug-Ins/Components
          pgrep -x AudioComponentRegistrar >/dev/null && killall -9 AudioComponentRegistrar; echo "killed AudioComponentRegistrar" || echo "AudioComponentRegistrar Process not found"
          ${{matrix.PluginVal}} ~/Library/Audio/Plug-Ins/Components/${{env.PROJECT_NAME}}.component || exit 1
          ${{matrix.AuVal}} || exit 1
          sudo rm -rf ~/Library/Audio/Plug-Ins/Components/${{env.PROJECT_NAME}}.component
          mv Compatible/${{env.PROJECT_NAME}}.component ~/Library/Audio/Plug-Ins/Components
          pgrep -x AudioComponentRegistrar >/dev/null && killall -9 AudioComponentRegistrar; echo "killed AudioComponentRegistrar" || echo "AudioComponentRegistrar Process not found"
          ${{matrix.PluginVal}} ~/Library/Audio/Plug-Ins/Components/${{env.PROJECT_NAME}}.component || exit 1
          ${{matrix.AuVal}} || exit 1
        shell: bash

      - name: Pluginval (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          powershell -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest https://github.com/Tracktion/pluginval/releases/download/latest_release/pluginval_Windows.zip -OutFile pluginval.zip"
          powershell -Command "Expand-Archive pluginval.zip -DestinationPath ."
          ${{matrix.PluginVal}} ${{env.PROJECT_NAME}}.vst3
          if %ERRORLEVEL% neq 0 exit /b 1
        shell: cmd
